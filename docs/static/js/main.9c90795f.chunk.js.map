{"version":3,"sources":["assets/images/logo.svg","helpers/str.js","data/urls.js","actions/app.js","services/Storage.js","data/config.js","components/forms/Checkbox.jsx","components/buttons/SmallButton.jsx","helpers/generateID.js","data/group-options.js","components/options/Options.jsx","helpers/arr.js","components/buttons/TextButton.jsx","components/main/Main.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","getUri","url","indexOf","substring","length","getOptions","removeKeys","allKeys","arrToPreserve","result","objectKeys","Object","keys","i","objectKey","j","openNewTab","window","open","Storage","localStorage","clear","key","storedData","getItem","JSON","parse","value","stringify","setItem","removeItem","storageKey","Checkbox","props","selectedOptions","get","checked","includes","defaultValue","useState","checkedStatus","setChecked","type","id","onChange","htmlFor","text","SmallButton","cssClasses","extraCss","className","onClick","UUIDGeneratorBrowser","replace","c","crypto","getRandomValues","Uint8Array","toString","arrAllOptions","arrBasicOptions","INIT","name","Options","storage","options","setOptions","handleOptionStatus","data","Array","isArray","arr","index","splice","removeValue","set","push","selectNone","getCssExtraClass","expectedOption","actualButton","cssClassNameForAll","cssClassNameForBasic","cssClassNameForNone","map","option","str","charAt","toUpperCase","slice","TextButton","runApp","storedOptions","allOptions","arrLinks","values","runCheckers","Main","setUrl","event","target","href","rel","App","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c90795f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const getUri = (url) => {\n    if (url.indexOf('https://') === 0) {\n        return url.substring(('https://').length, url.length);\n    }\n\n    if (url.indexOf('http://') === 0) {\n        return url.substring(('http://').length, url.length);\n    }\n\n    return url;\n}\n\nconst ucfirst = (str) => {\n    if (typeof str !== 'string')\n        return '';\n\n    return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\n\nexport {\n    getUri,\n    ucfirst,\n}\n","import { getUri } from '../helpers/str.js';\n\nconst buttonContrast = 'https://www.aditus.io/button-contrast-checker/';\nconst cssValitador = 'https://jigsaw.w3.org/css-validator/validator?uri=';\nconst facebookDebug = 'https://developers.facebook.com/tools/debug/?q=';\nconst gtMextrix = 'https://gtmetrix.com/?url=';\nconst html5Valitador = 'https://html5.validator.nu/?doc=';\nconst keywordsDensity = 'http://www.wmtips.com/tools/keyword-density-analyzer/?&url=';\nconst jsValidator = 'https://codebeautify.org/jsvalidate/?url=';\nconst microdata = 'https://search.google.com/test/rich-results?url=';\nconst mobileFrindly = 'https://search.google.com/test/mobile-friendly?url=';\nconst mozillaObservatory = 'https://observatory.mozilla.org/analyze/';\nconst openlinkprofiler = 'https://openlinkprofiler.org/?url=';\nconst pageSpeed = 'http://developers.google.com/speed/pagespeed/insights/?url=';\nconst securityHeaders = 'https://securityheaders.com/?q=';\nconst siteCost = 'https://whatdoesmysitecost.com/?siteURL=';\n\nconst getOptions = (url) => {\n\n    const data = {\n        'button-contrast': buttonContrast,\n        'css': cssValitador + url,\n        'facebook': facebookDebug + url,\n        'gtmetrix': gtMextrix + url,\n        'headers': securityHeaders + url,\n        'html5': html5Valitador + url,\n        'js': jsValidator + url,\n        'keywords-density': keywordsDensity + url,\n        'links': openlinkprofiler + url,\n        'microdata': microdata + url,\n        'mobile-friendly': mobileFrindly + url,\n        'mozilla': mozillaObservatory + getUri(url),\n        'page-speed': pageSpeed + url,\n        'site-cost': siteCost + url,\n    }\n\n    return data;\n};\n\nexport default getOptions;\n","import getOptions from '../data/urls.js';\n\nconst runCheckers = (url, storedOptions) => {\n    const allOptions = getOptions(url);\n\n    const arrLinks = (allOptions.length === storedOptions.length)\n        ? Object.values(allOptions)\n        : Object.values(removeKeys(allOptions, storedOptions));\n\n    for (let i = 0; i < arrLinks.length; i++) {\n        openNewTab(arrLinks[i]);\n    }\n}\n\nconst removeKeys = (allKeys, arrToPreserve) => {\n    const result = {};\n\n    const objectKeys = Object.keys(allKeys);\n    for (let i = 0; i < objectKeys.length; i++) {\n        const objectKey = objectKeys[i];\n\n\n        for (let j = 0; j < arrToPreserve.length; j++) {\n            const optionName = arrToPreserve[j];\n            if (objectKey === optionName) {\n                result[objectKey] = allKeys[objectKey];\n            }\n        }\n    }\n\n    return result;\n}\n\nconst openNewTab = (url) => {\n    window.open(url, '_blank');\n}\n\n\nexport {\n    runCheckers\n}\n","/**\n * Class to handle LocalStorage\n *\n * Mois√©s Alcocer, 2019\n * contacto@ironwoods.es\n */\n\nclass Storage\n{\n\n    clear()\n    {\n        window.localStorage.clear();\n    }\n\n    get(key)\n    {\n        const storedData = window.localStorage.getItem(key);\n        const value = (storedData !== null)\n            ? JSON.parse(storedData)\n            : '';\n\n        return value;\n    }\n\n    set(key, value)\n    {\n        value = JSON.stringify(value);\n\n        window.localStorage.setItem(key, value);\n    }\n\n    unset(key)\n    {\n        window.localStorage.removeItem(key);\n    }\n}\n\nexport default Storage;\n","const storageKey = 'web-checker-options';\n\n\nexport {\n    storageKey\n}\n","import React, { useState } from 'react';\nimport Storage from '../../services/Storage.js';\nimport { storageKey } from '../../data/config.js';\nimport './forms.css';\n\n\nfunction Checkbox(props)\n{\n    const storage = new Storage();\n    const selectedOptions = storage.get(storageKey);\n\n    const checked = (props.checked)\n        ? props.checked\n        : (selectedOptions.includes(props.defaultValue));\n\n    const [checkedStatus, setChecked] = useState(checked);\n\n    const handleChange = () => {\n        setChecked(!checkedStatus);\n\n        props.onChange(props.defaultValue, !checkedStatus);\n    }\n\n    return (\n        <div>\n            <input type=\"checkbox\"\n                id={props.defaultValue}\n                checked={checkedStatus}\n                defaultValue={props.defaultValue}\n                onChange={handleChange} />\n\n            <label htmlFor={props.id}>\n                {props.text}\n            </label>\n        </div>\n    );\n}\n\nexport default Checkbox;\n","import React from 'react';\nimport './buttons.css';\n\n\nfunction SmallButton(props)\n{\n    const cssClasses = props.extraCss\n        ? 'btn btn-small ' + props.extraCss\n        : 'btn btn-small';\n\n    return (\n        <button className={cssClasses}\n            onClick={props.onClick}>\n            { props.text }\n        </button>\n    );\n}\n\nexport default SmallButton;\n","/**\n * From https://gist.github.com/jupegarnica\n */\n\nconst UUIDGeneratorBrowser = () => (\n        [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n    ).replace(\n        /[018]/g, c => (\n            c ^ (crypto.getRandomValues(\n                new Uint8Array(1)\n            )[0] & (15 >> (c / 4)))\n        ).toString(16)\n    );\n\n\nexport default UUIDGeneratorBrowser\n","const arrAllOptions = [\n    'button-contrast',\n    'css',\n    'facebook',\n    'gtmetrix',\n    'headers',\n    'html5',\n    'js',\n    'keywords-density',\n    'links',\n    'microdata',\n    'mobile-friendly',\n    'mozilla',\n    'page-speed',\n    'site-cost',\n];\n\nconst arrBasicOptions = [\n    'button-contrast',\n    'css',\n    'html5',\n    'links',\n    'mobile-friendly',\n];\n\n\nexport {\n    arrAllOptions,\n    arrBasicOptions\n}\n","import React, { useState } from 'react';\nimport Checkbox from '../forms/Checkbox.jsx';\nimport SmallButton from '../buttons/SmallButton.jsx';\nimport UUIDGeneratorBrowser from '../../helpers/generateID.js';\nimport Storage from '../../services/Storage.js';\nimport { arrAllOptions, arrBasicOptions } from '../../data/group-options.js';\nimport { checkArray, removeValue } from '../../helpers/arr.js';\nimport { storageKey } from '../../data/config.js';\nimport { ucfirst } from '../../helpers/str.js';\nimport './Options.css';\n\n\n\n\nconst INIT = {\n    name: 'basic'\n};\nfunction Options()\n{\n    const storage = new Storage();\n    const [options, setOptions] = useState(INIT);\n\n    const handleOptionStatus = (value, checked) => {\n        let selectedOptions = storage.get(storageKey);\n\n        // In case of the storage key & array was deleted!\n        if (! checkArray(selectedOptions)) {\n            selectNone();\n            return;\n        }\n\n        if (selectedOptions.includes(value) && checked === false) {\n            selectedOptions = removeValue(selectedOptions, value);\n            storage.set(storageKey, selectedOptions);\n            return;\n        }\n\n        if (! selectedOptions.includes(value) && checked === true) {\n            selectedOptions.push(value);\n            storage.set(storageKey, selectedOptions);\n        }\n    }\n\n    const selectAll = () => {\n        storage.set(storageKey, arrAllOptions);\n        setOptions({\n            name: 'all',\n        });\n    }\n    const selectBasic = () => {\n        storage.set(storageKey, arrBasicOptions);\n        setOptions(INIT);\n    }\n    const selectNone = () => {\n        storage.set(storageKey, []);\n        setOptions({\n            name: 'none',\n        });\n    }\n\n    const getCssExtraClass = (expectedOption, actualButton) => {\n        return (expectedOption === actualButton) ? 'activated' : '';\n    }\n    const cssClassNameForAll   = getCssExtraClass('all', options.name);\n    const cssClassNameForBasic = getCssExtraClass('basic', options.name);\n    const cssClassNameForNone  = getCssExtraClass('none', options.name);\n\n    const createCheckbox = (option) =>\n    {\n        return (\n            <Checkbox\n                key={UUIDGeneratorBrowser()}\n                checked={false}\n                defaultValue={option}\n                text={ucfirst(option)}\n                onChange={(value, checked) => { handleOptionStatus(value, checked) }}>\n            </Checkbox>\n        );\n    }\n\n    return (\n        <section className=\"options\">\n            <h3>Options:</h3>\n\n            <div className=\"option-buttons\">\n                <strong>Select: </strong>\n                <SmallButton text=\"All\"\n                    onClick={selectAll}\n                    extraCss={cssClassNameForAll} />\n                <SmallButton text=\"Basic\"\n                    onClick={selectBasic}\n                    extraCss={cssClassNameForBasic} />\n                <SmallButton text=\"None\"\n                    onClick={selectNone}\n                    extraCss={cssClassNameForNone} />\n            </div>\n\n            <div className=\"checkboxes\">\n                {arrAllOptions.map(createCheckbox)}\n            </div>\n        </section>\n    );\n}\n\nexport default Options;\n","const checkArray = (data) => {\n    return (data !== null\n        && typeof (data) === 'object'\n        && Array.isArray(data));\n}\n\nconst removeValue = (arr, value) => {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n    }\n\n    return arr;\n}\n\n\nexport {\n    checkArray,\n    removeValue,\n}\n","import React from 'react';\nimport './buttons.css';\n\n\nfunction TextButton(props)\n{\n    const cssClasses = props.extraCss\n        ? 'btn ' + props.extraCss\n        : 'btn';\n\n    return (\n        <button className={cssClasses}\n            onClick={props.onClick}>\n            { props.text }\n        </button>\n    );\n}\n\nexport default TextButton;\n","import React, { useState } from 'react';\nimport { runCheckers } from '../../actions/app.js';\nimport Options from '../options/Options.jsx';\nimport Storage from '../../services/Storage.js';\nimport TextButton from '../buttons/TextButton.jsx';\nimport { storageKey } from '../../data/config.js';\nimport './Main.css';\n\nconst runApp = (url) => {\n    const storage = new Storage();\n    runCheckers(url, storage.get(storageKey));\n}\n\nfunction Main()\n{\n    const [url, setUrl] = useState('https://www.ironwoods.es');\n\n    return (\n        <main>\n            <section>\n                <div className=\"form-group v-margin\">\n                    <label htmlFor=\"url\"><h3>Type the website URL:</h3></label>\n                    <input type=\"url\"\n                        id=\"url\"\n                        defaultValue={url}\n                        onChange={ event => setUrl( event.target.value ) } />\n                </div>\n                <TextButton\n                    text=\"Check site !\"\n                    onClick={() => runApp(url)}>\n                </TextButton>\n\n                <Options />\n            </section>\n\n            <section className=\"help-box top-5\">\n                <h4>Notice:</h4>\n\n                <p>If you are using a pop-up blocker tool you only\n                can use the first of the set validation tools.\n                You need to turn off your blocker to allow the tool\n                to run normally.</p>\n            </section>\n\n            <section className=\"help-box\">\n                <h4>This tool runs:</h4>\n\n                <ul className=\"index\">\n                    <li><a href=\"https://html5.validator.nu\"\n                        target=\"_blank\"\n                        rel=\"external nofollow noreferrer noopener\">\n                        HTML5 Validator\n                    </a></li>\n                    <li><a href=\"https://jigsaw.w3.org/css-validator/\"\n                        target=\"_blank\"\n                        rel=\"external nofollow noreferrer noopener\">\n                        CSS Validator Service\n                    </a></li>\n                </ul>\n                <p>\n                    ... and others.\n                    One new tap / window will be open for each test.\n                </p>\n                <p>Each linked tool is free or the free version of a\n                commercial tool, all rights are of their respective owners.\n                I don't offer guarantees about the linked web tools and\n                don't assume responsibilities by their use or the use\n                of this web app.</p>\n                <p>I don't track anything activity of users. If some link isn't working you can put an issue on <a href=\"https://oricis.github.io/Web-Checker/\"\n                    target=\"_blank\"\n                    rel=\"external noreferrer noopener\">\n                    this project's repository page on Github</a>.</p>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './main/Main.jsx';\nimport logo from '../assets/images/logo.svg';\nimport '../assets/css/reset.css';\nimport './App.css';\n\nfunction App()\n{\n    return (\n        <div className=\"App\">\n            <header>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                Web Checker\n            </header>\n            <Main />\n            <footer>\n                2020 Mois√©s Alcocer - MIT Licence\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}